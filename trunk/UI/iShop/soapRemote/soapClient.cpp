/* soapClient.cpp
   Generated by gSOAP 2.7.11 from MobileService.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.11 2008-09-17 20:17:01 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getCategory(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getCategory *ns2__getCategory, _ns2__getCategoryResponse *ns2__getCategoryResponse)
{	struct __ns3__getCategory soap_tmp___ns3__getCategory;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap11Endpoint";
	if (!soap_action)
		soap_action = "urn:getCategory";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getCategory.ns2__getCategory = ns2__getCategory;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getCategory(soap, &soap_tmp___ns3__getCategory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getCategory(soap, &soap_tmp___ns3__getCategory, "-ns3:getCategory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getCategory(soap, &soap_tmp___ns3__getCategory, "-ns3:getCategory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getCategoryResponse)
		return soap_closesock(soap);
	ns2__getCategoryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getCategoryResponse->soap_get(soap, "ns2:getCategoryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getProductDetails(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getProductDetails *ns2__getProductDetails, _ns2__getProductDetailsResponse *ns2__getProductDetailsResponse)
{	struct __ns3__getProductDetails soap_tmp___ns3__getProductDetails;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap11Endpoint";
	if (!soap_action)
		soap_action = "urn:getProductDetails";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getProductDetails.ns2__getProductDetails = ns2__getProductDetails;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getProductDetails(soap, &soap_tmp___ns3__getProductDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getProductDetails(soap, &soap_tmp___ns3__getProductDetails, "-ns3:getProductDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getProductDetails(soap, &soap_tmp___ns3__getProductDetails, "-ns3:getProductDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getProductDetailsResponse)
		return soap_closesock(soap);
	ns2__getProductDetailsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getProductDetailsResponse->soap_get(soap, "ns2:getProductDetailsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getProductListByIds(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getProductListByIds *ns2__getProductListByIds, _ns2__getProductListByIdsResponse *ns2__getProductListByIdsResponse)
{	struct __ns3__getProductListByIds soap_tmp___ns3__getProductListByIds;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap11Endpoint";
	if (!soap_action)
		soap_action = "urn:getProductListByIds";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getProductListByIds.ns2__getProductListByIds = ns2__getProductListByIds;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getProductListByIds(soap, &soap_tmp___ns3__getProductListByIds);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getProductListByIds(soap, &soap_tmp___ns3__getProductListByIds, "-ns3:getProductListByIds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getProductListByIds(soap, &soap_tmp___ns3__getProductListByIds, "-ns3:getProductListByIds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getProductListByIdsResponse)
		return soap_closesock(soap);
	ns2__getProductListByIdsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getProductListByIdsResponse->soap_get(soap, "ns2:getProductListByIdsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getPopularProducts(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getPopularProducts *ns2__getPopularProducts, _ns2__getPopularProductsResponse *ns2__getPopularProductsResponse)
{	struct __ns3__getPopularProducts soap_tmp___ns3__getPopularProducts;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap11Endpoint";
	if (!soap_action)
		soap_action = "urn:getPopularProducts";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getPopularProducts.ns2__getPopularProducts = ns2__getPopularProducts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getPopularProducts(soap, &soap_tmp___ns3__getPopularProducts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getPopularProducts(soap, &soap_tmp___ns3__getPopularProducts, "-ns3:getPopularProducts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getPopularProducts(soap, &soap_tmp___ns3__getPopularProducts, "-ns3:getPopularProducts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getPopularProductsResponse)
		return soap_closesock(soap);
	ns2__getPopularProductsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getPopularProductsResponse->soap_get(soap, "ns2:getPopularProductsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getCategoryList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getCategoryList *ns2__getCategoryList, _ns2__getCategoryListResponse *ns2__getCategoryListResponse)
{	struct __ns3__getCategoryList soap_tmp___ns3__getCategoryList;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap11Endpoint";
	if (!soap_action)
		soap_action = "urn:getCategoryList";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getCategoryList.ns2__getCategoryList = ns2__getCategoryList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getCategoryList(soap, &soap_tmp___ns3__getCategoryList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getCategoryList(soap, &soap_tmp___ns3__getCategoryList, "-ns3:getCategoryList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getCategoryList(soap, &soap_tmp___ns3__getCategoryList, "-ns3:getCategoryList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getCategoryListResponse)
		return soap_closesock(soap);
	ns2__getCategoryListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getCategoryListResponse->soap_get(soap, "ns2:getCategoryListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getPriceHistory(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getPriceHistory *ns2__getPriceHistory, _ns2__getPriceHistoryResponse *ns2__getPriceHistoryResponse)
{	struct __ns3__getPriceHistory soap_tmp___ns3__getPriceHistory;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap11Endpoint";
	if (!soap_action)
		soap_action = "urn:getPriceHistory";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getPriceHistory.ns2__getPriceHistory = ns2__getPriceHistory;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getPriceHistory(soap, &soap_tmp___ns3__getPriceHistory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getPriceHistory(soap, &soap_tmp___ns3__getPriceHistory, "-ns3:getPriceHistory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getPriceHistory(soap, &soap_tmp___ns3__getPriceHistory, "-ns3:getPriceHistory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getPriceHistoryResponse)
		return soap_closesock(soap);
	ns2__getPriceHistoryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getPriceHistoryResponse->soap_get(soap, "ns2:getPriceHistoryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getBusinessList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getBusinessList *ns2__getBusinessList, _ns2__getBusinessListResponse *ns2__getBusinessListResponse)
{	struct __ns3__getBusinessList soap_tmp___ns3__getBusinessList;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap11Endpoint";
	if (!soap_action)
		soap_action = "urn:getBusinessList";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getBusinessList.ns2__getBusinessList = ns2__getBusinessList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getBusinessList(soap, &soap_tmp___ns3__getBusinessList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getBusinessList(soap, &soap_tmp___ns3__getBusinessList, "-ns3:getBusinessList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getBusinessList(soap, &soap_tmp___ns3__getBusinessList, "-ns3:getBusinessList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getBusinessListResponse)
		return soap_closesock(soap);
	ns2__getBusinessListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getBusinessListResponse->soap_get(soap, "ns2:getBusinessListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getProductList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getProductList *ns2__getProductList, _ns2__getProductListResponse *ns2__getProductListResponse)
{	struct __ns3__getProductList soap_tmp___ns3__getProductList;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap11Endpoint";
	if (!soap_action)
		soap_action = "urn:getProductList";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getProductList.ns2__getProductList = ns2__getProductList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getProductList(soap, &soap_tmp___ns3__getProductList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getProductList(soap, &soap_tmp___ns3__getProductList, "-ns3:getProductList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getProductList(soap, &soap_tmp___ns3__getProductList, "-ns3:getProductList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getProductListResponse)
		return soap_closesock(soap);
	ns2__getProductListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getProductListResponse->soap_get(soap, "ns2:getProductListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getBusinessDetails(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getBusinessDetails *ns2__getBusinessDetails, _ns2__getBusinessDetailsResponse *ns2__getBusinessDetailsResponse)
{	struct __ns3__getBusinessDetails soap_tmp___ns3__getBusinessDetails;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap11Endpoint";
	if (!soap_action)
		soap_action = "urn:getBusinessDetails";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getBusinessDetails.ns2__getBusinessDetails = ns2__getBusinessDetails;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getBusinessDetails(soap, &soap_tmp___ns3__getBusinessDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getBusinessDetails(soap, &soap_tmp___ns3__getBusinessDetails, "-ns3:getBusinessDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getBusinessDetails(soap, &soap_tmp___ns3__getBusinessDetails, "-ns3:getBusinessDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getBusinessDetailsResponse)
		return soap_closesock(soap);
	ns2__getBusinessDetailsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getBusinessDetailsResponse->soap_get(soap, "ns2:getBusinessDetailsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__searchProducts(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__searchProducts *ns2__searchProducts, _ns2__searchProductsResponse *ns2__searchProductsResponse)
{	struct __ns3__searchProducts soap_tmp___ns3__searchProducts;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap11Endpoint";
	if (!soap_action)
		soap_action = "urn:searchProducts";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__searchProducts.ns2__searchProducts = ns2__searchProducts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__searchProducts(soap, &soap_tmp___ns3__searchProducts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__searchProducts(soap, &soap_tmp___ns3__searchProducts, "-ns3:searchProducts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__searchProducts(soap, &soap_tmp___ns3__searchProducts, "-ns3:searchProducts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__searchProductsResponse)
		return soap_closesock(soap);
	ns2__searchProductsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__searchProductsResponse->soap_get(soap, "ns2:searchProductsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getCategory(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getCategory *ns2__getCategory, _ns2__getCategoryResponse *ns2__getCategoryResponse)
{	struct __ns4__getCategory soap_tmp___ns4__getCategory;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap12Endpoint";
	if (!soap_action)
		soap_action = "urn:getCategory";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getCategory.ns2__getCategory = ns2__getCategory;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getCategory(soap, &soap_tmp___ns4__getCategory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getCategory(soap, &soap_tmp___ns4__getCategory, "-ns4:getCategory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getCategory(soap, &soap_tmp___ns4__getCategory, "-ns4:getCategory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getCategoryResponse)
		return soap_closesock(soap);
	ns2__getCategoryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getCategoryResponse->soap_get(soap, "ns2:getCategoryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getProductDetails(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getProductDetails *ns2__getProductDetails, _ns2__getProductDetailsResponse *ns2__getProductDetailsResponse)
{	struct __ns4__getProductDetails soap_tmp___ns4__getProductDetails;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap12Endpoint";
	if (!soap_action)
		soap_action = "urn:getProductDetails";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getProductDetails.ns2__getProductDetails = ns2__getProductDetails;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getProductDetails(soap, &soap_tmp___ns4__getProductDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getProductDetails(soap, &soap_tmp___ns4__getProductDetails, "-ns4:getProductDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getProductDetails(soap, &soap_tmp___ns4__getProductDetails, "-ns4:getProductDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getProductDetailsResponse)
		return soap_closesock(soap);
	ns2__getProductDetailsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getProductDetailsResponse->soap_get(soap, "ns2:getProductDetailsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getProductListByIds(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getProductListByIds *ns2__getProductListByIds, _ns2__getProductListByIdsResponse *ns2__getProductListByIdsResponse)
{	struct __ns4__getProductListByIds soap_tmp___ns4__getProductListByIds;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap12Endpoint";
	if (!soap_action)
		soap_action = "urn:getProductListByIds";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getProductListByIds.ns2__getProductListByIds = ns2__getProductListByIds;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getProductListByIds(soap, &soap_tmp___ns4__getProductListByIds);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getProductListByIds(soap, &soap_tmp___ns4__getProductListByIds, "-ns4:getProductListByIds", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getProductListByIds(soap, &soap_tmp___ns4__getProductListByIds, "-ns4:getProductListByIds", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getProductListByIdsResponse)
		return soap_closesock(soap);
	ns2__getProductListByIdsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getProductListByIdsResponse->soap_get(soap, "ns2:getProductListByIdsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getPopularProducts(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getPopularProducts *ns2__getPopularProducts, _ns2__getPopularProductsResponse *ns2__getPopularProductsResponse)
{	struct __ns4__getPopularProducts soap_tmp___ns4__getPopularProducts;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap12Endpoint";
	if (!soap_action)
		soap_action = "urn:getPopularProducts";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getPopularProducts.ns2__getPopularProducts = ns2__getPopularProducts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getPopularProducts(soap, &soap_tmp___ns4__getPopularProducts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getPopularProducts(soap, &soap_tmp___ns4__getPopularProducts, "-ns4:getPopularProducts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getPopularProducts(soap, &soap_tmp___ns4__getPopularProducts, "-ns4:getPopularProducts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getPopularProductsResponse)
		return soap_closesock(soap);
	ns2__getPopularProductsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getPopularProductsResponse->soap_get(soap, "ns2:getPopularProductsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getCategoryList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getCategoryList *ns2__getCategoryList, _ns2__getCategoryListResponse *ns2__getCategoryListResponse)
{	struct __ns4__getCategoryList soap_tmp___ns4__getCategoryList;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap12Endpoint";
	if (!soap_action)
		soap_action = "urn:getCategoryList";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getCategoryList.ns2__getCategoryList = ns2__getCategoryList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getCategoryList(soap, &soap_tmp___ns4__getCategoryList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getCategoryList(soap, &soap_tmp___ns4__getCategoryList, "-ns4:getCategoryList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getCategoryList(soap, &soap_tmp___ns4__getCategoryList, "-ns4:getCategoryList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getCategoryListResponse)
		return soap_closesock(soap);
	ns2__getCategoryListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getCategoryListResponse->soap_get(soap, "ns2:getCategoryListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getPriceHistory(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getPriceHistory *ns2__getPriceHistory, _ns2__getPriceHistoryResponse *ns2__getPriceHistoryResponse)
{	struct __ns4__getPriceHistory soap_tmp___ns4__getPriceHistory;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap12Endpoint";
	if (!soap_action)
		soap_action = "urn:getPriceHistory";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getPriceHistory.ns2__getPriceHistory = ns2__getPriceHistory;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getPriceHistory(soap, &soap_tmp___ns4__getPriceHistory);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getPriceHistory(soap, &soap_tmp___ns4__getPriceHistory, "-ns4:getPriceHistory", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getPriceHistory(soap, &soap_tmp___ns4__getPriceHistory, "-ns4:getPriceHistory", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getPriceHistoryResponse)
		return soap_closesock(soap);
	ns2__getPriceHistoryResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getPriceHistoryResponse->soap_get(soap, "ns2:getPriceHistoryResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getBusinessList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getBusinessList *ns2__getBusinessList, _ns2__getBusinessListResponse *ns2__getBusinessListResponse)
{	struct __ns4__getBusinessList soap_tmp___ns4__getBusinessList;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap12Endpoint";
	if (!soap_action)
		soap_action = "urn:getBusinessList";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getBusinessList.ns2__getBusinessList = ns2__getBusinessList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getBusinessList(soap, &soap_tmp___ns4__getBusinessList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getBusinessList(soap, &soap_tmp___ns4__getBusinessList, "-ns4:getBusinessList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getBusinessList(soap, &soap_tmp___ns4__getBusinessList, "-ns4:getBusinessList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getBusinessListResponse)
		return soap_closesock(soap);
	ns2__getBusinessListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getBusinessListResponse->soap_get(soap, "ns2:getBusinessListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getProductList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getProductList *ns2__getProductList, _ns2__getProductListResponse *ns2__getProductListResponse)
{	struct __ns4__getProductList soap_tmp___ns4__getProductList;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap12Endpoint";
	if (!soap_action)
		soap_action = "urn:getProductList";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getProductList.ns2__getProductList = ns2__getProductList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getProductList(soap, &soap_tmp___ns4__getProductList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getProductList(soap, &soap_tmp___ns4__getProductList, "-ns4:getProductList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getProductList(soap, &soap_tmp___ns4__getProductList, "-ns4:getProductList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getProductListResponse)
		return soap_closesock(soap);
	ns2__getProductListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getProductListResponse->soap_get(soap, "ns2:getProductListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getBusinessDetails(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__getBusinessDetails *ns2__getBusinessDetails, _ns2__getBusinessDetailsResponse *ns2__getBusinessDetailsResponse)
{	struct __ns4__getBusinessDetails soap_tmp___ns4__getBusinessDetails;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap12Endpoint";
	if (!soap_action)
		soap_action = "urn:getBusinessDetails";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getBusinessDetails.ns2__getBusinessDetails = ns2__getBusinessDetails;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getBusinessDetails(soap, &soap_tmp___ns4__getBusinessDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getBusinessDetails(soap, &soap_tmp___ns4__getBusinessDetails, "-ns4:getBusinessDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getBusinessDetails(soap, &soap_tmp___ns4__getBusinessDetails, "-ns4:getBusinessDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__getBusinessDetailsResponse)
		return soap_closesock(soap);
	ns2__getBusinessDetailsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__getBusinessDetailsResponse->soap_get(soap, "ns2:getBusinessDetailsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__searchProducts(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns2__searchProducts *ns2__searchProducts, _ns2__searchProductsResponse *ns2__searchProductsResponse)
{	struct __ns4__searchProducts soap_tmp___ns4__searchProducts;
	if (!soap_endpoint)
		soap_endpoint = "http://kenlo.gotdns.com:8080/axis2/services/MobileService.MobileServiceHttpSoap12Endpoint";
	if (!soap_action)
		soap_action = "urn:searchProducts";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__searchProducts.ns2__searchProducts = ns2__searchProducts;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__searchProducts(soap, &soap_tmp___ns4__searchProducts);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__searchProducts(soap, &soap_tmp___ns4__searchProducts, "-ns4:searchProducts", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__searchProducts(soap, &soap_tmp___ns4__searchProducts, "-ns4:searchProducts", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns2__searchProductsResponse)
		return soap_closesock(soap);
	ns2__searchProductsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns2__searchProductsResponse->soap_get(soap, "ns2:searchProductsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
