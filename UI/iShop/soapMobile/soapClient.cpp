/* soapClient.cpp
   Generated by gSOAP 2.7.11 from ../../IMobile.h
   Copyright(C) 2000-2008, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.11 2008-08-15 10:30:17 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getProductDetails(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getProductDetails *ns1__getProductDetails, _ns1__getProductDetailsResponse *ns1__getProductDetailsResponse)
{	struct __ns3__getProductDetails soap_tmp___ns3__getProductDetails;
	if (!soap_endpoint)
	{
		soap_endpoint = "http://localhost:8080/axis2/services/IMobile";
	}
	if (!soap_action)
		soap_action = "urn:getProductDetails";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getProductDetails.ns1__getProductDetails = ns1__getProductDetails;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getProductDetails(soap, &soap_tmp___ns3__getProductDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getProductDetails(soap, &soap_tmp___ns3__getProductDetails, "-ns3:getProductDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getProductDetails(soap, &soap_tmp___ns3__getProductDetails, "-ns3:getProductDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getProductDetailsResponse)
		return soap_closesock(soap);
	ns1__getProductDetailsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getProductDetailsResponse->soap_get(soap, "ns1:getProductDetailsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getCategoryList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getCategoryList *ns1__getCategoryList, _ns1__getCategoryListResponse *ns1__getCategoryListResponse)
{	struct __ns3__getCategoryList soap_tmp___ns3__getCategoryList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/axis2/services/IMobile";
	if (!soap_action)
		soap_action = "urn:getCategoryList";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getCategoryList.ns1__getCategoryList = ns1__getCategoryList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getCategoryList(soap, &soap_tmp___ns3__getCategoryList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getCategoryList(soap, &soap_tmp___ns3__getCategoryList, "-ns3:getCategoryList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getCategoryList(soap, &soap_tmp___ns3__getCategoryList, "-ns3:getCategoryList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getCategoryListResponse)
		return soap_closesock(soap);
	ns1__getCategoryListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getCategoryListResponse->soap_get(soap, "ns1:getCategoryListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getBusinessList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getBusinessList *ns1__getBusinessList, _ns1__getBusinessListResponse *ns1__getBusinessListResponse)
{	struct __ns3__getBusinessList soap_tmp___ns3__getBusinessList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/axis2/services/IMobile";
	if (!soap_action)
		soap_action = "urn:getBusinessList";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getBusinessList.ns1__getBusinessList = ns1__getBusinessList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getBusinessList(soap, &soap_tmp___ns3__getBusinessList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getBusinessList(soap, &soap_tmp___ns3__getBusinessList, "-ns3:getBusinessList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getBusinessList(soap, &soap_tmp___ns3__getBusinessList, "-ns3:getBusinessList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getBusinessListResponse)
		return soap_closesock(soap);
	ns1__getBusinessListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getBusinessListResponse->soap_get(soap, "ns1:getBusinessListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getProductList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getProductList *ns1__getProductList, _ns1__getProductListResponse *ns1__getProductListResponse)
{	struct __ns3__getProductList soap_tmp___ns3__getProductList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/axis2/services/IMobile";
	if (!soap_action)
		soap_action = "urn:getProductList";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getProductList.ns1__getProductList = ns1__getProductList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getProductList(soap, &soap_tmp___ns3__getProductList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getProductList(soap, &soap_tmp___ns3__getProductList, "-ns3:getProductList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getProductList(soap, &soap_tmp___ns3__getProductList, "-ns3:getProductList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getProductListResponse)
		return soap_closesock(soap);
	ns1__getProductListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getProductListResponse->soap_get(soap, "ns1:getProductListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__getBusinessDetails(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getBusinessDetails *ns1__getBusinessDetails, _ns1__getBusinessDetailsResponse *ns1__getBusinessDetailsResponse)
{	struct __ns3__getBusinessDetails soap_tmp___ns3__getBusinessDetails;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/axis2/services/IMobile";
	if (!soap_action)
		soap_action = "urn:getBusinessDetails";
	soap->encodingStyle = NULL;
	soap_tmp___ns3__getBusinessDetails.ns1__getBusinessDetails = ns1__getBusinessDetails;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns3__getBusinessDetails(soap, &soap_tmp___ns3__getBusinessDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns3__getBusinessDetails(soap, &soap_tmp___ns3__getBusinessDetails, "-ns3:getBusinessDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns3__getBusinessDetails(soap, &soap_tmp___ns3__getBusinessDetails, "-ns3:getBusinessDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getBusinessDetailsResponse)
		return soap_closesock(soap);
	ns1__getBusinessDetailsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getBusinessDetailsResponse->soap_get(soap, "ns1:getBusinessDetailsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getProductDetails(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getProductDetails *ns1__getProductDetails, _ns1__getProductDetailsResponse *ns1__getProductDetailsResponse)
{	struct __ns4__getProductDetails soap_tmp___ns4__getProductDetails;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/axis2/services/IMobile";
	if (!soap_action)
		soap_action = "urn:getProductDetails";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getProductDetails.ns1__getProductDetails = ns1__getProductDetails;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getProductDetails(soap, &soap_tmp___ns4__getProductDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getProductDetails(soap, &soap_tmp___ns4__getProductDetails, "-ns4:getProductDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getProductDetails(soap, &soap_tmp___ns4__getProductDetails, "-ns4:getProductDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getProductDetailsResponse)
		return soap_closesock(soap);
	ns1__getProductDetailsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getProductDetailsResponse->soap_get(soap, "ns1:getProductDetailsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getCategoryList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getCategoryList *ns1__getCategoryList, _ns1__getCategoryListResponse *ns1__getCategoryListResponse)
{	struct __ns4__getCategoryList soap_tmp___ns4__getCategoryList;
	if (!soap_endpoint)
	{
		soap_endpoint = "http://localhost:8080/axis2/services/IMobile";
	}
	if (!soap_action)
		soap_action = "urn:getCategoryList";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getCategoryList.ns1__getCategoryList = ns1__getCategoryList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getCategoryList(soap, &soap_tmp___ns4__getCategoryList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getCategoryList(soap, &soap_tmp___ns4__getCategoryList, "-ns4:getCategoryList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getCategoryList(soap, &soap_tmp___ns4__getCategoryList, "-ns4:getCategoryList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getCategoryListResponse)
		return soap_closesock(soap);
	ns1__getCategoryListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getCategoryListResponse->soap_get(soap, "ns1:getCategoryListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getBusinessList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getBusinessList *ns1__getBusinessList, _ns1__getBusinessListResponse *ns1__getBusinessListResponse)
{	struct __ns4__getBusinessList soap_tmp___ns4__getBusinessList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/axis2/services/IMobile";
	if (!soap_action)
		soap_action = "urn:getBusinessList";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getBusinessList.ns1__getBusinessList = ns1__getBusinessList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getBusinessList(soap, &soap_tmp___ns4__getBusinessList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getBusinessList(soap, &soap_tmp___ns4__getBusinessList, "-ns4:getBusinessList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getBusinessList(soap, &soap_tmp___ns4__getBusinessList, "-ns4:getBusinessList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getBusinessListResponse)
		return soap_closesock(soap);
	ns1__getBusinessListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getBusinessListResponse->soap_get(soap, "ns1:getBusinessListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getProductList(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getProductList *ns1__getProductList, _ns1__getProductListResponse *ns1__getProductListResponse)
{	struct __ns4__getProductList soap_tmp___ns4__getProductList;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/axis2/services/IMobile";
	if (!soap_action)
		soap_action = "urn:getProductList";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getProductList.ns1__getProductList = ns1__getProductList;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getProductList(soap, &soap_tmp___ns4__getProductList);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getProductList(soap, &soap_tmp___ns4__getProductList, "-ns4:getProductList", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getProductList(soap, &soap_tmp___ns4__getProductList, "-ns4:getProductList", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getProductListResponse)
		return soap_closesock(soap);
	ns1__getProductListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getProductListResponse->soap_get(soap, "ns1:getProductListResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns4__getBusinessDetails(struct soap *soap, const char *soap_endpoint, const char *soap_action, _ns1__getBusinessDetails *ns1__getBusinessDetails, _ns1__getBusinessDetailsResponse *ns1__getBusinessDetailsResponse)
{	struct __ns4__getBusinessDetails soap_tmp___ns4__getBusinessDetails;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost:8080/axis2/services/IMobile";
	if (!soap_action)
		soap_action = "urn:getBusinessDetails";
	soap->encodingStyle = NULL;
	soap_tmp___ns4__getBusinessDetails.ns1__getBusinessDetails = ns1__getBusinessDetails;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns4__getBusinessDetails(soap, &soap_tmp___ns4__getBusinessDetails);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns4__getBusinessDetails(soap, &soap_tmp___ns4__getBusinessDetails, "-ns4:getBusinessDetails", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns4__getBusinessDetails(soap, &soap_tmp___ns4__getBusinessDetails, "-ns4:getBusinessDetails", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getBusinessDetailsResponse)
		return soap_closesock(soap);
	ns1__getBusinessDetailsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getBusinessDetailsResponse->soap_get(soap, "ns1:getBusinessDetailsResponse", "");
	if (soap->error)
	{	if (soap->error == SOAP_TAG_MISMATCH && soap->level == 2)
			return soap_recv_fault(soap);
		return soap_closesock(soap);
	}
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

/* End of soapClient.cpp */
